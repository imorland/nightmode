{"version":3,"sources":["webpack://@fof/nightmode/webpack/bootstrap","webpack://@fof/nightmode/./forum.js","webpack://@fof/nightmode/./src/forum/addSettingsItems.js","webpack://@fof/nightmode/./src/forum/index.js","webpack://@fof/nightmode/external \"flarum.core.compat['Model']\"","webpack://@fof/nightmode/external \"flarum.core.compat['app']\"","webpack://@fof/nightmode/external \"flarum.core.compat['components/FieldSet']\"","webpack://@fof/nightmode/external \"flarum.core.compat['components/Select']\"","webpack://@fof/nightmode/external \"flarum.core.compat['components/SettingsPage']\"","webpack://@fof/nightmode/external \"flarum.core.compat['extend']\"","webpack://@fof/nightmode/external \"flarum.core.compat['models/User']\""],"names":["extend","SettingsPage","prototype","items","user","app","session","CanChangeTheme","canUseDarkMode","CurrentTheme","preferences","fofNightModeThemeType","add","FieldSet","component","label","translator","trans","className","children","Select","value","key","onchange","e","auto","light","dark","oled","savePreferences","toString","then","console","info","log","m","redraw","options","initializers","User","Model","attribute","addSettingsItems"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./forum.js\");\n","export * from \"./src/forum\";\n","import { extend } from \"flarum/extend\";\n\nimport SettingsPage from \"flarum/components/SettingsPage\";\n\nimport Select from \"flarum/components/Select\";\nimport FieldSet from \"flarum/components/FieldSet\";\n\nexport default function () {\n    extend(SettingsPage.prototype, \"settingsItems\", function (items) {\n        const { user } = app.session;\n\n        const CanChangeTheme = user.canUseDarkMode();\n\n        if (!CanChangeTheme) return;\n\n        const CurrentTheme =\n            typeof user.preferences().fofNightModeThemeType !== \"boolean\"\n                ? 0\n                : user.preferences().fofNightModeThemeType;\n\n        items.add(\n            \"theme\",\n            FieldSet.component({\n                label: app.translator.trans(\n                    \"fof-nightmode.forum.user.settings.heading\"\n                ),\n                className: \"Settings-theme\",\n                children: [\n                    <p className=\"description\">\n                        {app.translator.trans(\n                            \"fof-nightmode.forum.user.settings.description\"\n                        )}\n                    </p>,\n                    Select.component({\n                        value: CurrentTheme ? CurrentTheme : 0,\n                        label: \"test\",\n                        key: \"selected_theme\",\n                        className: \"Settings-theme--input\",\n                        onchange: (e) => {\n                            let auto = false,\n                                light = false,\n                                dark = false,\n                                oled = false;\n\n                            user.savePreferences({\n                                fofNightModeThemeType: e.toString(),\n                            }).then(() => {\n                                console.info(\"SAVED\", e);\n                                console.log(user);\n                                m.redraw();\n                            });\n                        },\n                        options: [\n                            app.translator.trans(\n                                \"fof-nightmode.forum.user.settings.options.auto\"\n                            ),\n                            app.translator.trans(\n                                \"fof-nightmode.forum.user.settings.options.light\"\n                            ),\n                            app.translator.trans(\n                                \"fof-nightmode.forum.user.settings.options.dark\"\n                            ),\n                            app.translator.trans(\n                                \"fof-nightmode.forum.user.settings.options.oled\"\n                            ),\n                        ],\n                    }),\n                    <p className=\"Settings-theme--selection_description\">\n                        {CurrentTheme === 0\n                            ? app.translator.trans(\n                                  \"fof-nightmode.forum.user.settings.option_descriptions.auto\"\n                              )\n                            : CurrentTheme === 1\n                            ? app.translator.trans(\n                                  \"fof-nightmode.forum.user.settings.option_descriptions.light\"\n                              )\n                            : CurrentTheme === 2\n                            ? app.translator.trans(\n                                  \"fof-nightmode.forum.user.settings.option_descriptions.dark\"\n                              )\n                            : app.translator.trans(\n                                  \"fof-nightmode.forum.user.settings.option_descriptions.oled\"\n                              )}\n                    </p>,\n                ],\n            })\n        );\n    });\n}\n","import app from \"flarum/app\";\nimport Model from \"flarum/Model\";\nimport User from \"flarum/models/User\";\n\nimport addSettingsItems from \"./addSettingsItems\";\n\napp.initializers.add(\"fof-nightmode\", (app) => {\n    User.prototype.canUseDarkMode = Model.attribute(\"canUseDarkMode\");\n\n    addSettingsItems();\n});\n","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['components/FieldSet'];","module.exports = flarum.core.compat['components/Select'];","module.exports = flarum.core.compat['components/SettingsPage'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['models/User'];"],"sourceRoot":""}