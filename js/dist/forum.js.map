{"version":3,"sources":["webpack://@fof/nightmode/webpack/bootstrap","webpack://@fof/nightmode/external \"flarum.core.compat['extend']\"","webpack://@fof/nightmode/external \"flarum.core.compat['app']\"","webpack://@fof/nightmode/external \"flarum.core.compat['Model']\"","webpack://@fof/nightmode/external \"flarum.core.compat['models/User']\"","webpack://@fof/nightmode/external \"flarum.core.compat['components/SettingsPage']\"","webpack://@fof/nightmode/external \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@fof/nightmode/external \"flarum.core.compat['components/Select']\"","webpack://@fof/nightmode/external \"flarum.core.compat['components/FieldSet']\"","webpack://@fof/nightmode/external \"flarum.core.compat['components/Page']\"","webpack://@fof/nightmode/./src/forum/setSelectedTheme.js","webpack://@fof/nightmode/./src/forum/addSettingsItems.js","webpack://@fof/nightmode/./src/forum/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","SetTheme","user","app","session","setLight","$","removeClass","setDark","addClass","preferences","davwheat_themer_themetype","window","matchMedia","matches","extend","SettingsPage","items","canUseDarkMode","CurrentTheme","add","FieldSet","component","label","translator","trans","className","children","Select","onchange","e","redraw","savePreferences","then","console","info","log","options","LoadingIndicator","initializers","User","Model","attribute","addSettingsItems","Page"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['models/User'];","module.exports = flarum.core.compat['components/SettingsPage'];","module.exports = flarum.core.compat['components/LoadingIndicator'];","module.exports = flarum.core.compat['components/Select'];","module.exports = flarum.core.compat['components/FieldSet'];","module.exports = flarum.core.compat['components/Page'];","import { extend } from \"flarum/extend\";\n\n// import app from \"flarum/app\";\nimport Page from \"flarum/components/Page\";\n\nexport default function () {\n    extend(Page.prototype, \"init\", SetTheme);\n}\n\nexport function SetTheme() {\n    const { user } = app.session;\n\n    // const CanChangeTheme = user.canUseDarkMode();\n\n    const CurrentTheme = user.preferences().davwheat_themer_themetype\n        ? user.preferences().davwheat_themer_themetype\n        : 0;\n\n    /*\n        We need to forcefully remove unused dark classes when switching theme as\n        this function *could* be called from the Settings page where a dark theme\n        is already chosen, and we're meant to be switching to a light theme.\n    */\n\n    function setAuto() {\n        if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n            setDark();\n        } else {\n            setLight();\n        }\n    }\n\n    function setLight() {\n        $(\"body\").removeClass(\"dark\");\n        $(\"body\").removeClass(\"dark--oled\");\n    }\n\n    function setDark() {\n        $(\"body\").addClass(\"dark\");\n        $(\"body\").removeClass(\"dark--oled\");\n    }\n\n    function setOLED() {\n        setDark();\n        $(\"body\").addClass(\"dark--oled\");\n    }\n\n    switch (CurrentTheme) {\n        case 0: // auto\n            setAuto();\n            break;\n        case 1: // light\n            setLight();\n            break;\n        case 2: // dark\n            setDark();\n            break;\n        case 3: // oled\n            setOLED();\n            break;\n\n        default:\n            break;\n    }\n}\n","import { extend } from \"flarum/extend\";\n\nimport SettingsPage from \"flarum/components/SettingsPage\";\n\nimport LoadingIndicator from \"flarum/components/LoadingIndicator\";\nimport Select from \"flarum/components/Select\";\nimport FieldSet from \"flarum/components/FieldSet\";\n\nimport { SetTheme } from \"./setSelectedTheme\";\n\nexport default function () {\n    extend(SettingsPage.prototype, \"settingsItems\", function (items) {\n        const { user } = app.session;\n\n        const CanChangeTheme = user.canUseDarkMode();\n\n        if (!CanChangeTheme) return;\n\n        const CurrentTheme = user.preferences().davwheat_themer_themetype\n            ? user.preferences().davwheat_themer_themetype\n            : 0;\n\n        items.add(\n            \"theme\",\n            FieldSet.component({\n                label: app.translator.trans(\n                    \"fof-nightmode.forum.user.settings.heading\"\n                ),\n                className: \"Settings-theme\",\n                children: [\n                    <p className=\"description\">\n                        {app.translator.trans(\n                            \"fof-nightmode.forum.user.settings.description\"\n                        )}\n                    </p>,\n                    Select.component({\n                        value: CurrentTheme ? CurrentTheme : 0,\n                        label: \"test\",\n                        key: \"selected_theme\",\n                        className: \"Settings-theme--input\",\n                        onchange: (e) => {\n                            m.redraw();\n                            user.savePreferences({\n                                davwheat_themer_themetype: e,\n                            }).then(() => {\n                                console.info(\"SAVED\", e);\n                                console.log(user);\n                                m.redraw();\n\n                                // need to force-update selected theme (as it's only set\n                                // on a page load and redraw doesn't count as a apge load)\n                                SetTheme();\n                            });\n                        },\n                        options: [\n                            app.translator.trans(\n                                \"fof-nightmode.forum.user.settings.options.auto\"\n                            ),\n                            app.translator.trans(\n                                \"fof-nightmode.forum.user.settings.options.light\"\n                            ),\n                            app.translator.trans(\n                                \"fof-nightmode.forum.user.settings.options.dark\"\n                            ),\n                            app.translator.trans(\n                                \"fof-nightmode.forum.user.settings.options.oled\"\n                            ),\n                        ],\n                    }),\n                    <p className=\"Settings-theme--selection_description\">\n                        {CurrentTheme === 0\n                            ? app.translator.trans(\n                                  \"fof-nightmode.forum.user.settings.option_descriptions.auto\"\n                              )\n                            : CurrentTheme === 1\n                            ? app.translator.trans(\n                                  \"fof-nightmode.forum.user.settings.option_descriptions.light\"\n                              )\n                            : CurrentTheme === 2\n                            ? app.translator.trans(\n                                  \"fof-nightmode.forum.user.settings.option_descriptions.dark\"\n                              )\n                            : CurrentTheme === 3\n                            ? app.translator.trans(\n                                  \"fof-nightmode.forum.user.settings.option_descriptions.oled\"\n                              )\n                            : // prevents nasty paragraph switching\n                              LoadingIndicator.component()}\n                    </p>,\n                ],\n            })\n        );\n    });\n}\n","import app from \"flarum/app\";\nimport Model from \"flarum/Model\";\nimport User from \"flarum/models/User\";\n\nimport addSettingsItems from \"./addSettingsItems\";\nimport setSelectedTheme from \"./setSelectedTheme\";\n\napp.initializers.add(\"fof-nightmode\", (app) => {\n    User.prototype.canUseDarkMode = Model.attribute(\"canUseDarkMode\");\n\n    addSettingsItems();\n    setSelectedTheme();\n});\n"],"sourceRoot":""}